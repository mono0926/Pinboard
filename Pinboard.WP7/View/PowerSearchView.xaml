<view:MonoPage
    x:Name="MyPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
	xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:b="clr-namespace:Mono.Framework.Mvvm.Behavior;assembly=Mono.Framework.Mvvm.WP7"
    xmlns:view="clr-namespace:Mono.Framework.Mvvm.View;assembly=Mono.Framework.Mvvm.WP7"
	xmlns:controls="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:ctr="clr-namespace:Mono.App.Pinboard.Control"
    x:Class="Mono.App.Pinboard.View.PowerSearchView"
	SupportedOrientations="PortraitOrLandscape" Orientation="Portrait"
	mc:Ignorable="d" d:DesignHeight="768" d:DesignWidth="480"
	shell:SystemTray.IsVisible="True"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    toolkit:TiltEffect.IsTiltEnabled="True">

    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator IsIndeterminate="True" Text="Loading now..." IsVisible="{Binding IsProgressVisible}"  />
    </shell:SystemTray.ProgressIndicator>

    <i:Interaction.Triggers>
        <b:MessageTrigger MessageKey="{Binding TransitionKey, Source={StaticResource MessageKeys}}"
                          Messenger="{Binding Messenger}">
            <b:InteractionNavigationAction />
        </b:MessageTrigger>
        <i:EventTrigger EventName="BackKeyPress">
            <i:InvokeCommandAction  Command="{Binding BackKeyPressedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot" Background="Transparent">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="TitleAndDescription"/>
                <VisualState x:Name="TitleOnly">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentControl.Content)" Storyboard.TargetName="toggleSwitch1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Title Only"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="VisualStateGroup1">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="DateEnabled">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="DateDisabled">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                            <DiscreteObjectKeyFrame KeyTime="0:0:1">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="VisualStateGroup2">
                <VisualState x:Name="OR"/>
                <VisualState x:Name="AND">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentControl.Content)" Storyboard.TargetName="toggleSwitch2">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="AND"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:Pivot x:Name="pivot" Title="Search Your Items" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:Interaction.Behaviors>
                        <ec:ConditionBehavior>
                            <ec:ConditionalExpression>
                                <ec:ComparisonCondition LeftOperand="{Binding SelectedIndex, ElementName=pivot}" RightOperand="1"/>
                            </ec:ConditionalExpression>
                        </ec:ConditionBehavior>
                    </i:Interaction.Behaviors>
                    <i:InvokeCommandAction Command="{Binding SearchCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <controls:PivotItem Header="Search" Margin="12,10,12,0">
                <ScrollViewer  d:LayoutOverrides="Height">
                    <StackPanel>

                        <TextBlock TextWrapping="Wrap" Text="Query" FontSize="{StaticResource PhoneFontSizeMediumLarge}"
                                   HorizontalAlignment="Left" Foreground="{StaticResource PhoneSubtleBrush}"/>
                        <TextBox TextWrapping="Wrap" Text="{Binding QueryText, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <b:TextBoxUpdateSourceByPropertyChangedBehavior/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <toolkit:ToggleSwitch x:Name="toggleSwitch1" Header="Query Target"
        					Content="Title and Description"
        					IsChecked="{Binding IsTitleOnly, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <ec:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=toggleSwitch1}">
                                    <i:Interaction.Behaviors>
                                        <ec:ConditionBehavior>
                                            <ec:ConditionalExpression>
                                                <ec:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=toggleSwitch1}" RightOperand="False"/>
                                            </ec:ConditionalExpression>
                                        </ec:ConditionBehavior>
                                    </i:Interaction.Behaviors>
                                    <ec:GoToStateAction StateName="TitleAndDescription"/>
                                </ec:PropertyChangedTrigger>
                                <ec:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=toggleSwitch1}">
                                    <i:Interaction.Behaviors>
                                        <ec:ConditionBehavior>
                                            <ec:ConditionalExpression>
                                                <ec:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=toggleSwitch1}" RightOperand="True"/>
                                            </ec:ConditionalExpression>
                                        </ec:ConditionBehavior>
                                    </i:Interaction.Behaviors>
                                    <ec:GoToStateAction StateName="TitleOnly"/>
                                </ec:PropertyChangedTrigger>
                            </i:Interaction.Triggers>
                        </toolkit:ToggleSwitch>
                        <Rectangle Stroke="Black" Height="3" Margin="10,0,10,10">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource PhoneAccentColor}" Opacity="0.6"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock TextWrapping="Wrap" Text="Tags" FontSize="{StaticResource PhoneFontSizeMediumLarge}" HorizontalAlignment="Left" Foreground="{StaticResource PhoneSubtleBrush}"/>
                        <toolkit:ToggleSwitch x:Name="toggleSwitch2" Header="Condition"
        					IsChecked="{Binding IsAnd, Mode=TwoWay}" Content="OR">
                            <i:Interaction.Triggers>
                                <ec:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=toggleSwitch2}">
                                    <i:Interaction.Behaviors>
                                        <ec:ConditionBehavior>
                                            <ec:ConditionalExpression>
                                                <ec:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=toggleSwitch2}" RightOperand="False"/>
                                            </ec:ConditionalExpression>
                                        </ec:ConditionBehavior>
                                    </i:Interaction.Behaviors>
                                    <ec:GoToStateAction StateName="OR"/>
                                </ec:PropertyChangedTrigger>
                                <ec:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=toggleSwitch2}">
                                    <i:Interaction.Behaviors>
                                        <ec:ConditionBehavior>
                                            <ec:ConditionalExpression>
                                                <ec:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=toggleSwitch2}" RightOperand="True"/>
                                            </ec:ConditionalExpression>
                                        </ec:ConditionBehavior>
                                    </i:Interaction.Behaviors>
                                    <ec:GoToStateAction StateName="AND"/>
                                </ec:PropertyChangedTrigger>
                            </i:Interaction.Triggers>
                        </toolkit:ToggleSwitch>
                        <Popup IsOpen="{Binding IsShowPopup}">
                            <StackPanel Orientation="Vertical" Width="456" Background="{StaticResource PhoneAccentBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock HorizontalAlignment="Left"
                        				TextWrapping="Wrap"
                        				Text="{Binding CurrentTag}"
                        				VerticalAlignment="Center" Margin="20,0,0,0"
                        				FontFamily="Segoe WP Black"
                        				FontSize="{StaticResource PhoneFontSizeLarge}"/>
                                    <Button Content="Remove"
                        				Background="{StaticResource DeleteButtonBrush}"
                        				HorizontalAlignment="Right" Width="150"
                        				Command="{Binding RemoveCommand}"
                        				d:LayoutOverrides="Height" Grid.Column="1"/>
                                </Grid>
                                <Button Content="Cancel"
                        			Background="{x:Null}"
                        			HorizontalAlignment="Right" Width="150"
                        			Command="{Binding CancelCommand}"
	/>
                            </StackPanel>
                        </Popup>
                        <ItemsControl ItemsSource="{Binding Tags, Mode=TwoWay}" ItemsPanel="{StaticResource TagButtonItemTemplate}" ItemTemplate="{StaticResource TagButtonTemplate}"/>
                        <Button Content="Add Tag" HorizontalAlignment="Center" Margin="0,0,10,0" Width="200"
        					Command="{Binding AddTagCommand}"/>
                        <Rectangle Stroke="Black" Height="3" Margin="10,0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource PhoneAccentColor}" Opacity="0.6"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <toolkit:ToggleSwitch x:Name="toggleSwitch" Header="Date"
        					IsChecked="{Binding DateEnabled, Mode=TwoWay}" />
                        <Grid x:Name="grid" Opacity="0" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <i:Interaction.Behaviors>
                                <ec:DataStateBehavior TrueState="DateEnabled" FalseState="DateDisabled"
        							Binding="{Binding IsChecked, ElementName=toggleSwitch}"
        							Value="True"/>
                            </i:Interaction.Behaviors>
                            <toolkit:DatePicker d:LayoutOverrides="Height"
        						HorizontalAlignment="Right" Value="{Binding StartDate, Mode=TwoWay}"/>
                            <TextBlock TextWrapping="Wrap" Text="～" VerticalAlignment="Center" d:LayoutOverrides="Width" Grid.Column="1" HorizontalAlignment="Center"/>
                            <toolkit:DatePicker d:LayoutOverrides="Width, Height"
        						Grid.Column="2" Value="{Binding EndDate, Mode=TwoWay}"/>
                        </Grid>
                        <Rectangle Stroke="Black" Height="3" Margin="10,0,10,10">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource PhoneAccentColor}" Opacity="0.6"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <toolkit:ToggleSwitch Header="Private"
        					IsChecked="{Binding IsPrivate, Mode=TwoWay}" />
                        <Rectangle Stroke="Black" Height="3" Margin="10,0,10,10">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource PhoneAccentColor}" Opacity="0.6"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <toolkit:ToggleSwitch Header="To Read"
        					IsChecked="{Binding IsUnread, Mode=TwoWay}"/>
                    </StackPanel>
                </ScrollViewer>
            </controls:PivotItem>
            <controls:PivotItem Header="Results" Margin="12,10,12,0">
                <ListBox ItemTemplate="{StaticResource BookmarksDataTemplate}"
        			ItemContainerStyle="{StaticResource ListBoxItemStyle}"
        			ItemsSource="{Binding Items}"
        			Style="{StaticResource ListBoxStyle1}" />

            </controls:PivotItem>
        </controls:Pivot>

    </Grid>

</view:MonoPage>